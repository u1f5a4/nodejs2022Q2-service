version: '3.0'

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${PORT}:4000"
    networks:
      - proxy
    volumes:
      - ./:/usr/app
    env_file:
      - .env
    depends_on:
      - postgres

  prisma:
    image: prismagraphql/prisma:1.34
    restart: always
    ports:
      - '${PRISMA_PORT}:4466'
    networks:
      - proxy
    env_file:
      - .env
    environment:
      PRISMA_CONFIG: |
        port: ${PRISMA_PORT}
        managementApiSecret: ${PRISMA_SECRET}
        databases:
          default:
            connector: postgres
            host: postgres-db
            port: ${DB_PORT}
            user: ${POSTGRES_USER}
            password: ${POSTGRES_PASSWORD}

  postgres-db:
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${DB_PORT}:5432"
    networks:
      - proxy
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/db:/var/lib/postgresql/data

  # postgres-db:
  #   build: 
  #     context: ./postgres
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - "${DB_PORT}:5432"
  #   networks:
  #     - proxy
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - ./postgres/db:/var/lib/postgresql/data
  
networks:
  proxy:
    driver: bridge
